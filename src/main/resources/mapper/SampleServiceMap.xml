<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.test.mapper.SampleServiceMap">

    <insert id="test">
        INSERT into aa(name,time) VALUES('测试',NOW())
    </insert>
    <select id="getByUserName" parameterType="com.example.test.dto.User" resultType="com.example.test.dto.User">
        SELECT id as id,accout as account,pass_word as passWord,user_phone as phone,
        verification_code as verificationCode,user_status as userStatus,role_id as roleId,
        profile_path as profilePath,
         input_time as inputTime,login_time as loginTime,login_count as loginCount
         from user where accout=#{account,jdbcType=VARCHAR}

    </select>
    <select id="login" parameterType="com.example.test.dto.User" resultType="com.example.test.dto.User">
        SELECT id as id,accout as account,pass_word as passWord,user_phone as phone,
        verification_code as verificationCode,user_status as userStatus,
         input_time as inputTime,login_time as loginTime,login_count as loginCount
         from user where accout=#{account,jdbcType=VARCHAR} AND pass_word=#{passWord,jdbcType=VARCHAR}AND
        user_status='1'
    </select>

    <insert id="register" parameterType="com.example.test.dto.User">
        INSERT INTO user(accout,pass_word,user_phone,verification_code,user_status)
         VALUES(#{account,jdbcType=VARCHAR},#{passWord,jdbcType=VARCHAR},
         #{phone,jdbcType=VARCHAR},#{verificationCode,jdbcType=VARCHAR},#{userStatus,jdbcType=VARCHAR})
    </insert>

    <select id="getUserByName" parameterType="com.example.test.dto.User" resultType="com.example.test.dto.User">
        select id as id,accout as account,pass_word as passWord,user_phone as phone,
        verification_code as verificationCode,user_status as userStatus
        from user
        <where>
            <if test="account != null">
                and accout = #{account,jdbcType=VARCHAR}
            </if>
            <if test="verificationCode !=null">
                and verification_code=#{verificationCode,jdbcType=VARCHAR}
            </if>
        </where>
    </select>
    <update id="updateUser" parameterType="com.example.test.dto.User">
        update user
        <set>
            <if test="userStatus != null">
                user_status=#{userStatus,jdbcType=VARCHAR},
            </if>
            <if test="loginCount != null">
                login_count=#{loginCount,jdbcType=INTEGER},
            </if>
            <if test="loginTime != null">
                login_time=#{loginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="inputTime != null">
                input_time=#{inputTime,jdbcType=TIMESTAMP},
            </if>
            <if test="profilePath !=null">
                profile_path=#{profilePath,jdbcType=VARCHAR}
            </if>
        </set>
        where id =#{id}
    </update>
    <select id="list" parameterType="com.example.test.dto.QueryUser" resultType="com.example.test.dto.User">
        SELECT id as id,accout as account,pass_word as passWord,user_phone as phone,
          verification_code as verificationCode,user_status as userStatus,
         input_time as inputTime,login_time as loginTime,login_count as loginCount
         from user
    </select>

    <insert id="saveMessageBoard" parameterType="com.example.test.dto.MessageBoard">
        insert into message_board(account,message,inputTime)
        values (#{account,jdbcType=VARCHAR},#{message,jdbcType=VARCHAR},#{inputTime,jdbcType=VARCHAR})
    </insert>

    <select id="messageBoardList" parameterType="com.example.test.dto.QueryMessageBoard"
            resultType="com.example.test.dto.MessageBoard">
        select id as id, account as account, message as message,inputTime as inputTime
        from message_board order by  inputTime  desc
    </select>
    <select id="listUserRoles" resultType="com.example.test.dto.User">
        SELECT
        u.id as id,
        u.accout as userName,
        u.role_id as roleId,
        (SELECT  r.role_name  FROM role r WHERE u.role_id =r.role_id) as roleName
        from `user` u WHERE u.id=#{userId}
    </select>
    <select id="listUserPerms" resultType="String">
         SELECT
        (SELECT p.permission_name FROM permission p WHERE p.permission_id=r.permission_id) as permissionName
         from role_permission r WHERE r.role_id=#{roleId}

    </select>
</mapper>